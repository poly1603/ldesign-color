{"version":3,"file":"VueThemeModeSwitcher.vue2.cjs","sources":["../../src/vue/VueThemeModeSwitcher.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { Check, ChevronDown, Monitor, Moon, Sun } from 'lucide-vue-next'\nimport { computed, inject, onMounted, onUnmounted, ref, watch } from 'vue'\nimport { getLocale } from '../locales'\n\nexport type ThemeMode = 'light' | 'dark' | 'system'\n\nconst props = defineProps<{\n  defaultMode?: ThemeMode\n  storageKey?: string\n}>()\n\nconst emit = defineEmits<{\n  'update:mode': [mode: ThemeMode]\n  'change': [mode: ThemeMode]\n}>()\n\nconst STORAGE_KEY = props.storageKey || 'ld-theme-mode'\nconst isOpen = ref(false)\nconst currentMode = ref<ThemeMode>('system')\nconst systemPreference = ref<'light' | 'dark'>('light')\n\n// 响应式国际化支持\n// 使用标准的 'locale' key\nconst appLocale = inject<any>('locale', null)\n\n// 调试日志已禁用以保持控制台干净\n\nconst currentLocale = computed(() => {\n  if (appLocale && appLocale.value) {\n    return appLocale.value\n  }\n  return 'zh-CN'\n})\n\nconst locale = computed(() => getLocale(currentLocale.value))\n\n// 监听语言变化\nwatch(currentLocale, (_newLocale) => {\n  // 响应式更新，无需日志\n})\n\nconst modes = computed(() => [\n  { value: 'light' as const, label: locale.value.themeMode.light, icon: Sun },\n  { value: 'dark' as const, label: locale.value.themeMode.dark, icon: Moon },\n  { value: 'system' as const, label: locale.value.themeMode.system, icon: Monitor }\n])\n\nconst currentModeLabel = computed(() => {\n  const mode = modes.value.find(m => m.value === currentMode.value)\n  return mode?.label || '主题'\n})\n\nconst currentIcon = computed(() => {\n  const mode = modes.value.find(m => m.value === currentMode.value)\n  return mode?.icon || Sun\n})\n\nconst effectiveTheme = computed(() => {\n  if (currentMode.value === 'system') {\n    return systemPreference.value\n  }\n  return currentMode.value\n})\n\n// 监听系统主题变化\nconst mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n\nconst updateSystemPreference = () => {\n  systemPreference.value = mediaQuery.matches ? 'dark' : 'light'\n}\n\nconst applyTheme = (theme: 'light' | 'dark') => {\n  const root = document.documentElement\n  \n  // 使用 theme-mode 属性，与 theme.css 保持一致\n  if (theme === 'dark') {\n    root.setAttribute('theme-mode', 'dark')\n  } else {\n    root.removeAttribute('theme-mode')\n  }\n  \n  // 同时设置 data-theme-mode 以保持兼容性\n  root.setAttribute('data-theme-mode', theme)\n  \n  // 为了兼容其他主题系统，也设置常见的属性\n  root.classList.remove('light', 'dark')\n  root.classList.add(theme)\n}\n\nconst toggleDropdown = () => {\n  isOpen.value = !isOpen.value\n}\n\nconst changeMode = (mode: ThemeMode) => {\n  currentMode.value = mode\n  localStorage.setItem(STORAGE_KEY, mode)\n  isOpen.value = false\n  \n  emit('update:mode', mode)\n  emit('change', mode)\n}\n\nconst handleClickOutside = (event: MouseEvent) => {\n  const target = event.target as HTMLElement\n  if (!target.closest('.theme-mode-switcher')) {\n    isOpen.value = false\n  }\n}\n\n// 监听主题变化\nwatch(effectiveTheme, (newTheme) => {\n  applyTheme(newTheme)\n})\n\n// 监听系统主题变化\nwatch(systemPreference, () => {\n  if (currentMode.value === 'system') {\n    applyTheme(systemPreference.value)\n  }\n})\n\nonMounted(() => {\n  // 初始化系统主题偏好\n  updateSystemPreference()\n  mediaQuery.addEventListener('change', updateSystemPreference)\n  \n  // 从 localStorage 读取保存的主题模式\n  const savedMode = localStorage.getItem(STORAGE_KEY) as ThemeMode | null\n  if (savedMode && modes.value.some(m => m.value === savedMode)) {\n    currentMode.value = savedMode\n  } else if (props.defaultMode) {\n    currentMode.value = props.defaultMode\n  }\n  \n  // 应用初始主题\n  applyTheme(effectiveTheme.value)\n  \n  // 添加点击外部关闭下拉菜单的事件监听\n  document.addEventListener('click', handleClickOutside)\n})\n\nonUnmounted(() => {\n  mediaQuery.removeEventListener('change', updateSystemPreference)\n  document.removeEventListener('click', handleClickOutside)\n})\n</script>\n\n<template>\n  <div class=\"theme-mode-switcher\">\n    <button class=\"theme-mode-button\" :title=\"currentModeLabel\" @click=\"toggleDropdown\">\n      <component :is=\"currentIcon\" class=\"theme-icon\" />\n      <span class=\"theme-label\">{{ currentModeLabel }}</span>\n      <ChevronDown class=\"arrow\" :class=\"{ open: isOpen }\" />\n    </button>\n    <transition name=\"dropdown\">\n      <div v-if=\"isOpen\" class=\"theme-dropdown\" @click.stop>\n        <button\n          v-for=\"mode in modes\"\n          :key=\"mode.value\"\n          class=\"theme-option\"\n          :class=\"{ active: currentMode === mode.value }\"\n          @click=\"changeMode(mode.value)\"\n        >\n          <component :is=\"mode.icon\" class=\"option-icon\" />\n          <span class=\"option-label\">{{ mode.label }}</span>\n          <Check v-if=\"currentMode === mode.value\" class=\"check-icon\" />\n        </button>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<style scoped>\n.theme-mode-switcher {\n  position: relative;\n}\n\n.theme-mode-button {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: var(--ld-bg-color-component, var(--color-background-secondary));\n  border: 1px solid var(--ld-component-border, var(--color-border));\n  border-radius: 8px;\n  color: var(--ld-text-color-primary, var(--color-text-primary));\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.theme-mode-button:hover {\n  background: var(--ld-bg-color-component-hover, var(--color-primary-100));\n  border-color: var(--ld-brand-color-light, var(--color-primary-200));\n}\n\n.theme-icon {\n  width: 18px;\n  height: 18px;\n}\n\n.theme-label {\n  white-space: nowrap;\n}\n\n.arrow {\n  width: 16px;\n  height: 16px;\n  transition: transform 0.3s;\n}\n\n.arrow.open {\n  transform: rotate(180deg);\n}\n\n.theme-dropdown {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 8px;\n  background: var(--ld-bg-color-container, var(--color-background));\n  border: 1px solid var(--ld-component-border, var(--color-border));\n  border-radius: 8px;\n  box-shadow: var(--ld-shadow-2, 0 4px 12px rgba(0, 0, 0, 0.1));\n  overflow: hidden;\n  z-index: 1000;\n  min-width: 160px;\n}\n\n.theme-option {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  padding: 10px 16px;\n  background: none;\n  border: none;\n  color: var(--ld-text-color-primary, var(--color-text-primary));\n  font-size: 14px;\n  cursor: pointer;\n  transition: background 0.2s;\n  text-align: left;\n}\n\n.theme-option:hover {\n  background: var(--ld-bg-color-component, var(--color-background-secondary));\n}\n\n.theme-option.active {\n  background: var(--ld-brand-color-light, var(--color-primary-100));\n  color: var(--ld-brand-color, var(--color-primary-default));\n  font-weight: 600;\n}\n\n.option-icon {\n  width: 18px;\n  height: 18px;\n}\n\n.option-label {\n  flex: 1;\n}\n\n.check-icon {\n  width: 16px;\n  height: 16px;\n  color: var(--ld-brand-color, var(--color-primary-default));\n}\n\n/* Dropdown animation */\n.dropdown-enter-active,\n.dropdown-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.dropdown-enter-from,\n.dropdown-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n\n/* Dark mode specific styles */\n:root[theme-mode=\"dark\"] .theme-mode-button {\n  background: var(--ld-bg-color-component);\n  border-color: var(--ld-component-border);\n}\n\n:root[theme-mode=\"dark\"] .theme-mode-button:hover {\n  background: var(--ld-bg-color-component-hover);\n  border-color: var(--ld-brand-color-light);\n}\n\n:root[theme-mode=\"dark\"] .theme-dropdown {\n  background: var(--ld-bg-color-container);\n  border-color: var(--ld-component-border);\n}\n\n:root[theme-mode=\"dark\"] .theme-option:hover {\n  background: var(--ld-bg-color-component);\n}\n\n:root[theme-mode=\"dark\"] .theme-option.active {\n  background: var(--ld-brand-color-light);\n}\n</style>"],"names":["props","__props","emit","__emit","STORAGE_KEY","storageKey","isOpen","ref","currentMode","systemPreference","appLocale","inject","currentLocale","computed","value","locale","getLocale","watch","_newLocale","modes","label","themeMode","light","icon","Sun","dark","Moon","system","Monitor","currentModeLabel","find","m","currentIcon","effectiveTheme","mediaQuery","window","matchMedia","updateSystemPreference","matches","applyTheme","theme","root","document","documentElement","setAttribute","removeAttribute","classList","remove","add","toggleDropdown","changeMode","mode","localStorage","setItem","handleClickOutside","event","target","closest","newTheme","onMounted","addEventListener","savedMode","getItem","some","defaultMode","onUnmounted","removeEventListener","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","class","title","onClick","_createBlock","_resolveDynamicComponent","_hoisted_3","_toDisplayString","_createVNode","_unref","ChevronDown","_normalizeClass","open","_Transition","name","_Fragment","_renderList","key","active","$event","_hoisted_5","Check"],"mappings":"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"}