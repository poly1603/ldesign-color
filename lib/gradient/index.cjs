"use strict";/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */var f=require("../core/Color.cjs");class g{static linear(e,a={}){const{angle:t=90,repeating:o=!1,stops:n}=a,i=n||this.generateEvenStopsOptimized(e),r=o?"repeating-linear-gradient":"linear-gradient",l=i.map(c=>{const d=c.position!==void 0?` ${c.position}%`:"";return`${c.color.toRGBString()}${d}`}).join(", ");return`${r}(${t}deg, ${l})`}static radial(e,a={}){const{shape:t="circle",size:o="farthest-corner",position:n={x:"center",y:"center"},stops:i}=a,r=i||this.generateEvenStopsOptimized(e),l=`${n.x} ${n.y}`,c=r.map(d=>{const s=d.position!==void 0?` ${d.position}%`:"";return`${d.color.toRGBString()}${s}`}).join(", ");return`radial-gradient(${t} ${o} at ${l}, ${c})`}static conic(e,a={}){const{startAngle:t=0,position:o={x:"center",y:"center"},stops:n}=a,i=n||this.generateEvenStopsOptimized(e,!0),r=`${o.x} ${o.y}`,l=i.map(c=>{const d=c.position!==void 0?` ${c.position}deg`:"";return`${c.color.toRGBString()}${d}`}).join(", ");return`conic-gradient(${t?`from ${t}deg `:""}at ${r}, ${l})`}static mesh(e,a={}){const{smoothness:t=.5}=a,o=[];for(let i=0;i<e.length-1;i++){const r=e[i],l=e[i+1];for(let c=0;c<r.length-1;c++){const d=r[c],s=l[c+1],p=`linear-gradient(135deg, ${d.toRGBString()} 0%, ${s.toRGBString()} 100%)`;o.push(p)}}const n=(i,r,l)=>{const c=r/(e[0].length-1),d=l/(e.length-1);for(let s=0;s<e.length-1;s++)for(let p=0;p<e[s].length-1;p++){const h=p*c,$=s*d;g.drawBilinearGradient(i,h,$,c,d,e[s][p],e[s][p+1],e[s+1][p],e[s+1][p+1],t)}};return{css:o.join(", "),canvas:n}}static generateEvenStops(e,a=!1){if(e.length===0)return[];if(e.length===1)return[{color:e[0],position:0}];const t=a?360:100;return e.map((o,n)=>({color:o,position:n/(e.length-1)*t}))}static generateEvenStopsOptimized(e,a=!1){if(e.length===0)return[];const t=a?360:100,o=[];for(let n=0;n<e.length;n++){const i=new f.Color(e[n]);o.push({color:i,position:e.length===1?0:n/(e.length-1)*t}),typeof i.dispose=="function"&&(i._pendingDispose=!0)}return o}static drawBilinearGradient(e,a,t,o,n,i,r,l,c,d){const s=Math.max(2,Math.floor(d*20)),p=o/s,h=n/s;for(let $=0;$<=s;$++)for(let u=0;u<=s;u++){const m=$/s,G=u/s,S=i.mix(r,m*100),x=l.mix(c,m*100),y=S.mix(x,G*100);e.fillStyle=y.toRGBString(),e.fillRect(a+$*p,t+u*h,p+1,h+1)}}static smooth(e,a=10){if(e.length<2)return e.map(n=>new f.Color(n));const t=e.map(n=>new f.Color(n)),o=[];for(let n=0;n<a;n++){const i=n/(a-1),r=this.bezierInterpolation(t,i);o.push(r)}return o}static bezierInterpolation(e,a){if(e.length===1)return e[0];let t=e;for(;t.length>1;){const o=[];for(let n=0;n<t.length-1;n++){const i=t[n].mix(t[n+1],a*100);o.push(i)}if(t!==e)for(const n of t)typeof n.dispose=="function"&&n._intermediate&&n.dispose();o.forEach(n=>n._intermediate=!0),t=o}return t[0]}static animated(e,a=3e3,t="linear"){const o=`ga${Math.random().toString(36).substr(2,9)}`,n=[];for(let r=0;r<e.length;r++){const l=new f.Color(e[r]),c=r/(e.length-1)*100,d=new f.Color(e[(r+1)%e.length]);let s="";const p=l.toHex(),h=d.toHex();switch(t){case"linear":s=`linear-gradient(90deg, ${p}, ${h})`;break;case"radial":s=`radial-gradient(circle farthest-corner at center center, ${p}, ${h})`;break;case"conic":s=`conic-gradient(at center center, ${p}, ${h})`;break}n.push(`${c}% { background: ${s}; }`),typeof l.dispose=="function"&&l.dispose(),typeof d.dispose=="function"&&d.dispose()}const i=`
      @keyframes ${o} {
        ${n.join(`
`)}
      }
    `;return{css:`
      animation: ${o} ${a}ms ease-in-out infinite;
      background-size: 200% 200%;
    `,keyframes:i}}static toCSSVariables(e,a,t="gradient"){const o={},n=[];for(let i=0;i<a.length;i++){const r=new f.Color(a[i]),l=r.toHex();n.push(l),o[`--${t}-${e}-color-${i+1}`]=l,typeof r.dispose=="function"&&r.dispose()}return o[`--${t}-${e}-linear`]=g.linear(n),o[`--${t}-${e}-radial`]=g.radial(n),o[`--${t}-${e}-conic`]=g.conic(n),o}}const v=g.linear,w=g.radial,b=g.conic,z=g.mesh,B=g.smooth,C=g.animated;exports.GradientGenerator=g,exports.animatedGradient=C,exports.conicGradient=b,exports.linearGradient=v,exports.meshGradient=z,exports.radialGradient=w,exports.smoothGradient=B;/*! End of @ldesign/color | Powered by @ldesign/builder */
//# sourceMappingURL=index.cjs.map
