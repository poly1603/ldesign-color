"use strict";/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */var l=require("../core/Color.cjs");class F{static generate(e,u,t={}){const{count:a=5,variation:o=20,preserveLightness:r=!1,preserveSaturation:s=!1}=t;let n=[],c="";switch(u){case"monochromatic":n=this.generateMonochromatic(e,a,o),c="\u5355\u8272\u7CFB\u65B9\u6848\uFF1A\u4F7F\u7528\u540C\u4E00\u8272\u76F8\u7684\u4E0D\u540C\u660E\u5EA6\u548C\u9971\u548C\u5EA6";break;case"analogous":n=this.generateAnalogous(e,a),c="\u7C7B\u4F3C\u8272\u65B9\u6848\uFF1A\u4F7F\u7528\u8272\u8F6E\u4E0A\u76F8\u90BB\u7684\u989C\u8272";break;case"complementary":n=this.generateComplementary(e),c="\u4E92\u8865\u8272\u65B9\u6848\uFF1A\u4F7F\u7528\u8272\u8F6E\u4E0A\u76F8\u5BF9\u7684\u989C\u8272";break;case"split-complementary":n=this.generateSplitComplementary(e),c="\u5206\u88C2\u4E92\u8865\u65B9\u6848\uFF1A\u4F7F\u7528\u57FA\u8272\u548C\u5176\u4E92\u8865\u8272\u7684\u90BB\u8FD1\u8272";break;case"triadic":n=this.generateTriadic(e),c="\u4E09\u89D2\u8272\u65B9\u6848\uFF1A\u4F7F\u7528\u8272\u8F6E\u4E0A\u7B49\u8DDD\u7684\u4E09\u4E2A\u989C\u8272";break;case"tetradic":n=this.generateTetradic(e),c="\u56DB\u89D2\u8272\u65B9\u6848\uFF1A\u4F7F\u7528\u4E24\u5BF9\u4E92\u8865\u8272";break;case"square":n=this.generateSquare(e),c="\u6B63\u65B9\u5F62\u65B9\u6848\uFF1A\u4F7F\u7528\u8272\u8F6E\u4E0A\u5F62\u6210\u6B63\u65B9\u5F62\u7684\u56DB\u4E2A\u989C\u8272";break;case"compound":n=this.generateCompound(e,a),c="\u590D\u5408\u8272\u65B9\u6848\uFF1A\u7ED3\u5408\u4E92\u8865\u8272\u548C\u7C7B\u4F3C\u8272";break}if(r||s){const h=e.toHSL();n=n.map(g=>{const i=g.toHSL();return r&&(i.l=h.l),s&&(i.s=h.s),new l.Color(i)})}return t.enhanceHarmony&&u!=="monochromatic"&&(n=this.adjustHarmony(n,e)),{type:u,colors:n,base:e,description:c,harmony:this.evaluateHarmony({type:u,colors:n,base:e,description:c})}}static generateAdaptive(e,u={}){let t="analogous";const a=e.toHSL();return a.s<20?t="monochromatic":a.s>80&&a.l>40&&a.l<60?t="complementary":a.l<30||a.l>70?t="analogous":t="triadic",this.generate(e,t,u)}static generateAll(e,u={}){return["monochromatic","analogous","complementary","split-complementary","triadic","tetradic","square","compound"].map(t=>this.generate(e,t,u))}static generateMonochromatic(e,u,t){const a=e.toHSL(),o=[e];for(let r=1;r<u;r++){const s={...a};s.l=Math.max(0,Math.min(100,a.l+(r-u/2)*(t/u)*2)),s.s=Math.max(0,Math.min(100,a.s+(r-u/2)*(t/u))),o.push(new l.Color(s))}return o}static generateAnalogous(e,u){const t=e.toHSL(),a=[e],o=30/(u-1);for(let r=1;r<u;r++){const s={...t};s.h=(t.h+r*o-15+360)%360,a.push(new l.Color(s))}return a}static generateComplementary(e){const u=e.toHSL(),t={...u};return t.h=(u.h+180)%360,[e,new l.Color(t)]}static generateSplitComplementary(e){const u=e.toHSL(),t={...u},a={...u};return t.h=(u.h+150)%360,a.h=(u.h+210)%360,[e,new l.Color(t),new l.Color(a)]}static generateTriadic(e){const u=e.toHSL(),t=[e];for(let a=1;a<3;a++){const o={...u};o.h=(u.h+a*120)%360,t.push(new l.Color(o))}return t}static generateTetradic(e){const u=e.toHSL(),t=[e],a=[60,180,240];for(const o of a){const r={...u};r.h=(u.h+o)%360,t.push(new l.Color(r))}return t}static generateSquare(e){const u=e.toHSL(),t=[e];for(let a=1;a<4;a++){const o={...u};o.h=(u.h+a*90)%360,t.push(new l.Color(o))}return t}static generateCompound(e,u){const t=e.toHSL(),a=[e],o={...t};o.h=(t.h+180)%360,a.push(new l.Color(o));for(let r=2;r<u;r++){const s={...t},n=(r-1)*15*(r%2===0?1:-1);s.h=(t.h+n+360)%360,a.push(new l.Color(s))}return a}static adjustHarmony(e,u){const t=u.toHSL();return e.map(a=>{const o=a.toHSL(),r=Math.abs(o.h-t.h);if(r>0&&r<180){const s=([30,60,90,120,150,180].reduce((n,c)=>Math.abs(c-r)<Math.abs(n-r)?c:n)-r)*.3;o.h=(o.h+s+360)%360}return o.s=o.s*.9+t.s*.1,o.l=o.l*.95+t.l*.05,new l.Color(o)})}static evaluateHarmony(e){const{colors:u}=e;if(u.length<2)return 100;let t=0,a=0;for(let o=0;o<u.length-1;o++)for(let r=o+1;r<u.length;r++){const s=u[o].toHSL(),n=u[r].toHSL(),c=Math.abs(s.h-n.h),h=Math.min(c,360-c),g=Math.abs(s.s-n.s),i=Math.abs(s.l-n.l);let m=100;h===180||h===120||h===90?m*=1.2:h<30?m*=1.1:h>150&&h<210&&(m*=1.15),g>20&&g<50&&(m*=1.1),i>20&&i<50&&(m*=1.1),t+=Math.min(100,m),a++}return Math.round(t/a)}}const C=F.generate,p=F.generateAdaptive,S=F.generateAll,A=F.evaluateHarmony;exports.ColorSchemeGenerator=F,exports.evaluateHarmony=A,exports.generateAdaptiveScheme=p,exports.generateAllSchemes=S,exports.generateColorScheme=C;/*! End of @ldesign/color | Powered by @ldesign/builder */
//# sourceMappingURL=index.cjs.map
