"use strict";/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */var m=require("./Color.cjs");const u=[{name:"50",lightness:98},{name:"100",lightness:95},{name:"200",lightness:90},{name:"300",lightness:82},{name:"400",lightness:64},{name:"500",lightness:46},{name:"600",lightness:35},{name:"700",lightness:27},{name:"800",lightness:20},{name:"900",lightness:15},{name:"950",lightness:10},{name:"1000",lightness:7}];function h(e,s=!0){const t=new m.Color(e),n=t.toHSL(),r={},a={},o=n.l;if(u.forEach(({name:i,lightness:l})=>{const c=m.Color.fromHSL(n.h,n.s,l);r[i]=c.toHex(),s&&(a[i]=Math.abs(o-l))}),s){const i=Object.keys(a).sort((l,c)=>a[l]-a[c])[0];r[i]=t.toHex()}return r}function f(e){const s=new m.Color(e),t=s.toHSL(),n={primary:s,success:m.Color.fromHSL(142,Math.min(Math.max(t.s*.9,45),70),45),warning:m.Color.fromHSL(38,Math.min(Math.max(t.s*1.1,60),85),50),danger:m.Color.fromHSL(4,Math.min(Math.max(t.s,50),75),50),info:m.Color.fromHSL(210,Math.min(Math.max(t.s*.85,40),70),50)},r={};return Object.entries(n).forEach(([a,o])=>{r[a]=h(o.toHex(),!0)}),r}function y(){const e={};return[{name:"50",lightness:98},{name:"100",lightness:95},{name:"150",lightness:93},{name:"200",lightness:88},{name:"300",lightness:80},{name:"400",lightness:71},{name:"500",lightness:60},{name:"600",lightness:48},{name:"700",lightness:37},{name:"800",lightness:27},{name:"850",lightness:20},{name:"900",lightness:14},{name:"950",lightness:9},{name:"1000",lightness:5}].forEach(({name:s,lightness:t})=>{const n=m.Color.fromHSL(0,0,t);e[s]=n.toHex()}),e}function S(e,s={}){const{includeSemantics:t=!0,includeGrays:n=!0,preserveInput:r=!0}=s,a={colors:{}};if(t){const o=f(e);a.colors=o}else a.colors.primary=h(e,r);return n&&(a.grays=y()),a}function g(e,s,t={}){const{prefix:n="",suffixFormat:r="tailwind"}=t,a=[];return Object.entries(e).forEach(([o,i],l)=>{let c;r==="numeric"?c=String(l+1):c=o;const C=`--${n?n.endsWith("-")?n:`${n}-`:""}${s}-color-${c}`;a.push(`  ${C}: ${i};`)}),a.join(`
`)}function d(e,s={}){const{nameMap:t={}}=s,n=[];if(Object.entries(e.colors).forEach(([r,a])=>{const o=t[r]||r;n.push(g(a,o,s))}),e.grays){const r=t.gray||t.grays||"gray";n.push(g(e.grays,r,s))}return n.join(`
`)}function p(e,s="tailwind-palette-vars"){if(typeof document>"u")return;const t=document.getElementById(s);t&&t.remove();const n=document.createElement("style");n.id=s,n.textContent=`:root {
${e}
}`,document.head.appendChild(n)}function T(e,s={}){const{styleId:t="tailwind-palette-vars",...n}=s,r=d(e,n);p(r,t)}function w(e,s={}){const{names:t=["primary","secondary","tertiary","quaternary","quinary","senary","septenary","octonary","nonary","denary"],preserve:n=!0}=s;let r;Array.isArray(e)?e.length>0&&typeof e[0]=="number"?r=[e]:r=e:r=[e];const a={};return r.forEach((o,i)=>{const l=t[i]||`color${i+1}`;a[l]=h(o,n)}),a}exports.TAILWIND_SHADES=u,exports.applyThemeCssVars=T,exports.generatePaletteCssVars=g,exports.generateTailwindGrayScale=y,exports.generateTailwindPalettes=w,exports.generateTailwindScale=h,exports.generateTailwindSemanticColors=f,exports.generateTailwindTheme=S,exports.generateThemeCssVars=d,exports.insertCssVars=p;/*! End of @ldesign/color | Powered by @ldesign/builder */
//# sourceMappingURL=tailwindPalette.cjs.map
