"use strict";/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */var n=require("../core/Color.cjs"),l=require("./advancedCache.cjs"),a=require("./cache.cjs");class s{constructor(){this.cleanupInterval=null,this.CLEANUP_INTERVAL=6e4,this.MAX_MEMORY_MB=50,this.memoryCheckTimer=null,this.startAutoCleanup(),typeof document<"u"&&document.addEventListener("visibilitychange",this.handleVisibilityChange.bind(this)),typeof window<"u"&&window.addEventListener("beforeunload",this.cleanup.bind(this),{once:!0})}static getInstance(){return s.instance||(s.instance=new s),s.instance}handleVisibilityChange(){document.hidden&&this.reduceMemoryUsage()}startAutoCleanup(){this.cleanupInterval===null&&typeof window<"u"&&(this.cleanupInterval=window.setInterval(()=>{this.performAutoCleanup()},this.CLEANUP_INTERVAL))}stopAutoCleanup(){this.cleanupInterval!==null&&(clearInterval(this.cleanupInterval),this.cleanupInterval=null)}performAutoCleanup(){const e=this.getMemoryStats();e.estimatedMemoryMB>this.MAX_MEMORY_MB?this.aggressiveCleanup():e.estimatedMemoryMB>this.MAX_MEMORY_MB*.8&&this.moderateCleanup()}getMemoryStats(){const e=n.Color.pool?.length||0,o=a.globalColorCache.size,t=l.globalColorCache.size,i=o+t,r=e*100+i*200;return{colorPoolSize:e,colorCacheSize:o,advancedCacheSize:t,totalCacheItems:i,estimatedMemoryMB:r/(1024*1024)}}reduceMemoryUsage(){const e=n.Color.pool;if(e&&e.length>10&&(e.length=Math.floor(e.length/2)),l.globalColorCache.optimize&&l.globalColorCache.optimize(),a.globalColorCache.size>50){const o=Math.floor(a.globalColorCache.size/2),t=a.globalColorCache.cache;if(t&&t.keys){const i=Array.from(t.keys());for(let r=0;r<o;r++)a.globalColorCache.delete(i[r])}}}moderateCleanup(){const e=n.Color.pool;if(e&&e.length>5){const o=Math.floor(e.length*.25);e.splice(0,o)}l.globalColorCache.optimize&&l.globalColorCache.optimize()}aggressiveCleanup(){const e=n.Color.pool;if(e&&(e.length=Math.min(5,e.length)),a.globalColorCache.size>20){const o=a.globalColorCache.cache;if(o&&o.keys){const t=Array.from(o.keys()),i=20;for(let r=i;r<t.length;r++)a.globalColorCache.delete(t[r])}}if(l.globalColorCache.size>20){const o=l.globalColorCache.getMostFrequent(20);l.globalColorCache.clear(),o.forEach(t=>{l.globalColorCache.set(t.key,t.value)})}}cleanup(){this.stopAutoCleanup(),n.Color.cleanup&&n.Color.cleanup(),a.globalColorCache.clear(),l.globalColorCache.destroy(),this.memoryCheckTimer!==null&&(clearTimeout(this.memoryCheckTimer),this.memoryCheckTimer=null)}reset(){const e=n.Color.pool;e&&(e.length=0),a.globalColorCache.clear(),l.globalColorCache.clear();const o=l.globalColorCache.stats;o&&(o.hits=0,o.misses=0)}setMemoryLimit(e){this.MAX_MEMORY_MB=Math.max(10,e)}setAutoCleanup(e){e?this.startAutoCleanup():this.stopAutoCleanup()}requestGarbageCollection(){if(typeof window<"u"&&window.gc)try{window.gc()}catch{}}}const c=s.getInstance();function C(){c.cleanup()}function u(){c.reset()}function m(){return c.getMemoryStats()}function g(h){c.setMemoryLimit(h)}function p(h){c.setAutoCleanup(h)}exports.MemoryManager=s,exports.cleanupMemory=C,exports.getMemoryStats=m,exports.memoryManager=c,exports.resetMemory=u,exports.setAutoCleanup=p,exports.setMemoryLimit=g;/*! End of @ldesign/color | Powered by @ldesign/builder */
//# sourceMappingURL=memoryManager.cjs.map
