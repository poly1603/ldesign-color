/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */import{Color as f}from"../core/Color.js";class g{static linear(e,a={}){const{angle:t=90,repeating:i=!1,stops:n}=a,o=n||this.generateEvenStopsOptimized(e),r=i?"repeating-linear-gradient":"linear-gradient",l=o.map(c=>{const p=c.position!==void 0?` ${c.position}%`:"";return`${c.color.toRGBString()}${p}`}).join(", ");return`${r}(${t}deg, ${l})`}static radial(e,a={}){const{shape:t="circle",size:i="farthest-corner",position:n={x:"center",y:"center"},stops:o}=a,r=o||this.generateEvenStopsOptimized(e),l=`${n.x} ${n.y}`,c=r.map(p=>{const s=p.position!==void 0?` ${p.position}%`:"";return`${p.color.toRGBString()}${s}`}).join(", ");return`radial-gradient(${t} ${i} at ${l}, ${c})`}static conic(e,a={}){const{startAngle:t=0,position:i={x:"center",y:"center"},stops:n}=a,o=n||this.generateEvenStopsOptimized(e,!0),r=`${i.x} ${i.y}`,l=o.map(c=>{const p=c.position!==void 0?` ${c.position}deg`:"";return`${c.color.toRGBString()}${p}`}).join(", ");return`conic-gradient(${t?`from ${t}deg `:""}at ${r}, ${l})`}static mesh(e,a={}){const{smoothness:t=.5}=a,i=[];for(let o=0;o<e.length-1;o++){const r=e[o],l=e[o+1];for(let c=0;c<r.length-1;c++){const p=r[c],s=l[c+1],d=`linear-gradient(135deg, ${p.toRGBString()} 0%, ${s.toRGBString()} 100%)`;i.push(d)}}const n=(o,r,l)=>{const c=r/(e[0].length-1),p=l/(e.length-1);for(let s=0;s<e.length-1;s++)for(let d=0;d<e[s].length-1;d++){const h=d*c,$=s*p;g.drawBilinearGradient(o,h,$,c,p,e[s][d],e[s][d+1],e[s+1][d],e[s+1][d+1],t)}};return{css:i.join(", "),canvas:n}}static generateEvenStops(e,a=!1){if(e.length===0)return[];if(e.length===1)return[{color:e[0],position:0}];const t=a?360:100;return e.map((i,n)=>({color:i,position:n/(e.length-1)*t}))}static generateEvenStopsOptimized(e,a=!1){if(e.length===0)return[];const t=a?360:100,i=[];for(let n=0;n<e.length;n++){const o=new f(e[n]);i.push({color:o,position:e.length===1?0:n/(e.length-1)*t}),typeof o.dispose=="function"&&(o._pendingDispose=!0)}return i}static drawBilinearGradient(e,a,t,i,n,o,r,l,c,p){const s=Math.max(2,Math.floor(p*20)),d=i/s,h=n/s;for(let $=0;$<=s;$++)for(let u=0;u<=s;u++){const m=$/s,S=u/s,x=o.mix(r,m*100),y=l.mix(c,m*100),w=x.mix(y,S*100);e.fillStyle=w.toRGBString(),e.fillRect(a+$*d,t+u*h,d+1,h+1)}}static smooth(e,a=10){if(e.length<2)return e.map(n=>new f(n));const t=e.map(n=>new f(n)),i=[];for(let n=0;n<a;n++){const o=n/(a-1),r=this.bezierInterpolation(t,o);i.push(r)}return i}static bezierInterpolation(e,a){if(e.length===1)return e[0];let t=e;for(;t.length>1;){const i=[];for(let n=0;n<t.length-1;n++){const o=t[n].mix(t[n+1],a*100);i.push(o)}if(t!==e)for(const n of t)typeof n.dispose=="function"&&n._intermediate&&n.dispose();i.forEach(n=>n._intermediate=!0),t=i}return t[0]}static animated(e,a=3e3,t="linear"){const i=`ga${Math.random().toString(36).substr(2,9)}`,n=[];for(let r=0;r<e.length;r++){const l=new f(e[r]),c=r/(e.length-1)*100,p=new f(e[(r+1)%e.length]);let s="";const d=l.toHex(),h=p.toHex();switch(t){case"linear":s=`linear-gradient(90deg, ${d}, ${h})`;break;case"radial":s=`radial-gradient(circle farthest-corner at center center, ${d}, ${h})`;break;case"conic":s=`conic-gradient(at center center, ${d}, ${h})`;break}n.push(`${c}% { background: ${s}; }`),typeof l.dispose=="function"&&l.dispose(),typeof p.dispose=="function"&&p.dispose()}const o=`
      @keyframes ${i} {
        ${n.join(`
`)}
      }
    `;return{css:`
      animation: ${i} ${a}ms ease-in-out infinite;
      background-size: 200% 200%;
    `,keyframes:o}}static toCSSVariables(e,a,t="gradient"){const i={},n=[];for(let o=0;o<a.length;o++){const r=new f(a[o]),l=r.toHex();n.push(l),i[`--${t}-${e}-color-${o+1}`]=l,typeof r.dispose=="function"&&r.dispose()}return i[`--${t}-${e}-linear`]=g.linear(n),i[`--${t}-${e}-radial`]=g.radial(n),i[`--${t}-${e}-conic`]=g.conic(n),i}}const b=g.linear,v=g.radial,z=g.conic,B=g.mesh,G=g.smooth,k=g.animated;/*! End of @ldesign/color | Powered by @ldesign/builder */export{g as GradientGenerator,k as animatedGradient,z as conicGradient,b as linearGradient,B as meshGradient,v as radialGradient,G as smoothGradient};
//# sourceMappingURL=index.js.map
