/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */import{namedColorsMap as f}from"../constants/namedColors.js";import{hexToRgb as v,parseColorString as p,hslToRgb as d,hsvToRgb as g,hwbToRgb as m}from"../core/conversions.js";import{clamp as i}from"./math.js";function u(r){return(r.r|0)===r.r&&r.r>=0&&r.r<=255&&(r.g|0)===r.g&&r.g>=0&&r.g<=255&&(r.b|0)===r.b&&r.b>=0&&r.b<=255&&(r.a===void 0||r.a>=0&&r.a<=1)}function b(r){return typeof r.h=="number"&&typeof r.s=="number"&&typeof r.l=="number"&&r.h>=0&&r.h<=360&&r.s>=0&&r.s<=100&&r.l>=0&&r.l<=100&&(r.a===void 0||typeof r.a=="number"&&r.a>=0&&r.a<=1)}function h(r){return typeof r.h=="number"&&typeof r.s=="number"&&typeof r.v=="number"&&r.h>=0&&r.h<=360&&r.s>=0&&r.s<=100&&r.v>=0&&r.v<=100&&(r.a===void 0||typeof r.a=="number"&&r.a>=0&&r.a<=1)}function c(r){return typeof r.h=="number"&&typeof r.w=="number"&&typeof r.b=="number"&&r.h>=0&&r.h<=360&&r.w>=0&&r.w<=100&&r.b>=0&&r.b<=100&&(r.a===void 0||typeof r.a=="number"&&r.a>=0&&r.a<=1)}const e=new Set("0123456789ABCDEFabcdef");function s(r){if(!r)return!1;const t=r[0]==="#"?1:0,o=r.length-t;if(o!==3&&o!==4&&o!==6&&o!==8)return!1;for(let n=t;n<r.length;n++)if(!e.has(r[n]))return!1;return!0}function y(r){if(!r)return!1;const t=typeof r;if(t==="string"){if(r[0]==="#")return s(r);const o=r.toLowerCase();if(f.has(o))return!0;const n=r.indexOf("(");if(n>0&&n<7){const a=r.slice(0,n);return a==="rgb"||a==="rgba"||a==="hsl"||a==="hsla"||a==="hsv"||a==="hwb"}return!1}if(t==="object"){if(Array.isArray(r))return(r.length===3||r.length===4)&&r.every(o=>typeof o=="number");if(r.r!==void 0)return u(r);if(r.l!==void 0)return b(r);if(r.v!==void 0)return h(r);if(r.w!==void 0)return c(r)}return!1}function w(r){let t,o=1;if(typeof r=="string"){const n=r.toLowerCase(),a=f.get(n);if(a&&(r=a),s(r))t=v(r),t.a!==void 0&&(o=t.a,delete t.a);else{const l=p(r);if(l)t=l,t.a!==void 0&&(o=t.a,delete t.a);else throw new Error(`Invalid color string: ${r}`)}}else if(Array.isArray(r)){if(r.length<3||r.length>4)throw new Error("Array input must have 3 or 4 elements");t={r:i(r[0],0,255),g:i(r[1],0,255),b:i(r[2],0,255)},r.length===4&&(o=i(r[3],0,1))}else if(typeof r=="object"&&r!==null)if("r"in r&&"g"in r&&"b"in r){const n=r;t={r:i(n.r,0,255),g:i(n.g,0,255),b:i(n.b,0,255)},n.a!==void 0&&(o=i(n.a,0,1))}else if("h"in r&&"s"in r&&"l"in r){const n=r;t=d(n),n.a!==void 0&&(o=i(n.a,0,1))}else if("h"in r&&"s"in r&&"v"in r){const n=r;t=g(n),n.a!==void 0&&(o=i(n.a,0,1))}else if("h"in r&&"w"in r&&"b"in r){const n=r;t=m(n),n.a!==void 0&&(o=i(n.a,0,1))}else throw new Error("Invalid color object format");else throw new Error("Invalid color input type");return{rgb:t,alpha:o}}function C(r,t=255){return Number.isNaN(r)||r<0?0:r>t?t:r}function A(r){return r===void 0||Number.isNaN(r)?1:r<0?0:r>1?1:r}function x(r){return["hex","rgb","rgba","hsl","hsla","hsv","hsva","hwb","lab","lch","xyz","oklab","oklch","cmyk"].includes(r.toLowerCase())}/*! End of @ldesign/color | Powered by @ldesign/builder */export{y as isColorInput,x as isValidColorFormat,w as parseColorInput,A as sanitizeAlpha,C as sanitizeChannel,b as validateHSL,h as validateHSV,c as validateHWB,s as validateHex,u as validateRGB};
//# sourceMappingURL=validators.js.map
