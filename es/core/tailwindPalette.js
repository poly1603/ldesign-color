/*!
 * ***********************************
 * @ldesign/color v1.0.0           *
 * Built with rollup               *
 * Build time: 2024-10-21 14:32:31 *
 * Build mode: production          *
 * Minified: No                    *
 * ***********************************
 */import{Color as l}from"./Color.js";const u=[{name:"50",lightness:98},{name:"100",lightness:95},{name:"200",lightness:90},{name:"300",lightness:82},{name:"400",lightness:64},{name:"500",lightness:46},{name:"600",lightness:35},{name:"700",lightness:27},{name:"800",lightness:20},{name:"900",lightness:15},{name:"950",lightness:10},{name:"1000",lightness:7}];function h(n,s=!0){const t=new l(n),e=t.toHSL(),r={},a={},o=e.l;if(u.forEach(({name:i,lightness:m})=>{const c=l.fromHSL(e.h,e.s,m);r[i]=c.toHex(),s&&(a[i]=Math.abs(o-m))}),s){const i=Object.keys(a).sort((m,c)=>a[m]-a[c])[0];r[i]=t.toHex()}return r}function f(n){const s=new l(n),t=s.toHSL(),e={primary:s,success:l.fromHSL(142,Math.min(Math.max(t.s*.9,45),70),45),warning:l.fromHSL(38,Math.min(Math.max(t.s*1.1,60),85),50),danger:l.fromHSL(4,Math.min(Math.max(t.s,50),75),50),info:l.fromHSL(210,Math.min(Math.max(t.s*.85,40),70),50)},r={};return Object.entries(e).forEach(([a,o])=>{r[a]=h(o.toHex(),!0)}),r}function y(){const n={};return[{name:"50",lightness:98},{name:"100",lightness:95},{name:"150",lightness:93},{name:"200",lightness:88},{name:"300",lightness:80},{name:"400",lightness:71},{name:"500",lightness:60},{name:"600",lightness:48},{name:"700",lightness:37},{name:"800",lightness:27},{name:"850",lightness:20},{name:"900",lightness:14},{name:"950",lightness:9},{name:"1000",lightness:5}].forEach(({name:s,lightness:t})=>{const e=l.fromHSL(0,0,t);n[s]=e.toHex()}),n}function H(n,s={}){const{includeSemantics:t=!0,includeGrays:e=!0,preserveInput:r=!0}=s,a={colors:{}};if(t){const o=f(n);a.colors=o}else a.colors.primary=h(n,r);return e&&(a.grays=y()),a}function g(n,s,t={}){const{prefix:e="",suffixFormat:r="tailwind"}=t,a=[];return Object.entries(n).forEach(([o,i],m)=>{let c;r==="numeric"?c=String(m+1):c=o;const S=`--${e?e.endsWith("-")?e:`${e}-`:""}${s}-color-${c}`;a.push(`  ${S}: ${i};`)}),a.join(`
`)}function d(n,s={}){const{nameMap:t={}}=s,e=[];if(Object.entries(n.colors).forEach(([r,a])=>{const o=t[r]||r;e.push(g(a,o,s))}),n.grays){const r=t.gray||t.grays||"gray";e.push(g(n.grays,r,s))}return e.join(`
`)}function p(n,s="tailwind-palette-vars"){if(typeof document>"u")return;const t=document.getElementById(s);t&&t.remove();const e=document.createElement("style");e.id=s,e.textContent=`:root {
${n}
}`,document.head.appendChild(e)}function x(n,s={}){const{styleId:t="tailwind-palette-vars",...e}=s,r=d(n,e);p(r,t)}function w(n,s={}){const{names:t=["primary","secondary","tertiary","quaternary","quinary","senary","septenary","octonary","nonary","denary"],preserve:e=!0}=s;let r;Array.isArray(n)?n.length>0&&typeof n[0]=="number"?r=[n]:r=n:r=[n];const a={};return r.forEach((o,i)=>{const m=t[i]||`color${i+1}`;a[m]=h(o,e)}),a}/*! End of @ldesign/color | Powered by @ldesign/builder */export{u as TAILWIND_SHADES,x as applyThemeCssVars,g as generatePaletteCssVars,y as generateTailwindGrayScale,w as generateTailwindPalettes,h as generateTailwindScale,f as generateTailwindSemanticColors,H as generateTailwindTheme,d as generateThemeCssVars,p as insertCssVars};
//# sourceMappingURL=tailwindPalette.js.map
